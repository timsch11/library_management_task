services:
  postgres:
    container_name: postgres-cont
    image: postgres:latest
    hostname: localhost
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: library_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  neo4j:
    image: neo4j:5.20
    container_name: neo4j-cont
    ports:
      - "7474:7474" 
      - "7687:7687"   
    environment:
      - NEO4J_AUTH=neo4j/${DB_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins
      - ./db_init/init_neo4j.cypher:/var/lib/neo4j/import/init.cypher
      - ./db_init/data_neo4j.cypher:/var/lib/neo4j/import/data_init.cypher
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${DB_PASSWORD}", "RETURN 1;"]
      interval: 10s
      timeout: 10s
      retries: 5

  neo4j-init:
    image: neo4j:5.20
    depends_on:
      neo4j:
        condition: service_healthy
    volumes:
      - ./db_init/init_neo4j.cypher:/var/lib/neo4j/import/init.cypher
      - ./db_init/data_neo4j.cypher:/var/lib/neo4j/import/data_init.cypher
    command: >
      bash -c "
        cypher-shell -a neo4j:7687 -u neo4j -p ${DB_PASSWORD} -f /var/lib/neo4j/import/init.cypher &&
        cypher-shell -a neo4j:7687 -u neo4j -p ${DB_PASSWORD} -f /var/lib/neo4j/import/data_init.cypher
      "

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins: